{"ast":null,"code":"var _jsxFileName = \"/Users/pr293504/Desktop/intoReact/react-ecommerce/src/components/sign-up/sign-up.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      }); // try {\n      // const {user} =await auth.createUserWithEmailAndPassword(email, password);\n      // createUserProfileDocument(user, {displayName});\n      // this.setState({\n      //     displayName: '',\n      //     email:'',\n      //     password: '',\n      //     confirmPassword: ''\n      // })\n      // } catch(error) {\n      // console.error(error);\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/pr293504/Desktop/intoReact/react-ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,OAAO,uBAAP;;AAGA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAUdC,YAVc,GAUC,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAD0B,YAEnBN,WAFmB,GAEJ,KAAKO,KAFD,CAEnBP,WAFmB;AAAA,0BAG6B,KAAKQ,KAHlC;AAAA,YAGnBC,WAHmB,eAGnBA,WAHmB;AAAA,YAGNC,KAHM,eAGNA,KAHM;AAAA,YAGCC,QAHD,eAGCA,QAHD;AAAA,YAGWC,eAHX,eAGWA,eAHX;;AAK1B,UAAGD,QAAQ,KAAKC,eAAhB,EAAiC;AAC7BC,QAAAA,KAAK,yBAAL;AACA;AACH;;AACDb,MAAAA,WAAW,CAAC;AAACS,QAAAA,WAAD;AAAaC,QAAAA,KAAb;AAAmBC,QAAAA;AAAnB,OAAD,CAAX,CAT0B,CAW1B;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACI;AACJ;AAEH,KAnCa;;AAAA,SAqCdG,YArCc,GAqCCT,KAAK,IAAI;AAAA,4BACEA,KAAK,CAACU,MADR;AAAA,YACbC,IADa,iBACbA,IADa;AAAA,YACPC,KADO,iBACPA,KADO;AAEpB,WAAKC,QAAL,CAAc;AAAC,SAACF,IAAD,GAAQC;AAAT,OAAd;AACH,KAxCa;;AAEV,SAAKT,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,eAAe,EAAE;AAJR,KAAb;AAMH;;AAkCDO,EAAAA,MAAM,GAAG;AAAA,yBACkD,KAAKX,KADvD;AAAA,UACEC,WADF,gBACEA,WADF;AAAA,UACeC,KADf,gBACeA,KADf;AAAA,UACsBC,QADtB,gBACsBA,QADtB;AAAA,UACgCC,eADhC,gBACgCA,eADhC;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFA,EAGA;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAE,KAAKR,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,IAAI,EAAC,aAA5B;AAA0C,MAAA,KAAK,EAAEK,WAAjD;AAA8D,MAAA,QAAQ,EAAE,KAAKK,YAA7E;AAA2F,MAAA,KAAK,EAAC,cAAjG;AAAgH,MAAA,QAAQ,MAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAqC,MAAA,KAAK,EAAEJ,KAA5C;AAAmD,MAAA,QAAQ,EAAE,KAAKI,YAAlE;AAAgF,MAAA,KAAK,EAAC,OAAtF;AAA8F,MAAA,QAAQ,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAKA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAA2C,MAAA,KAAK,EAAEH,QAAlD;AAA4D,MAAA,QAAQ,EAAE,KAAKG,YAA3E;AAAyF,MAAA,KAAK,EAAC,UAA/F;AAA0G,MAAA,QAAQ,MAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EAOA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,iBAAhC;AAAkD,MAAA,KAAK,EAAEF,eAAzD;AAA0E,MAAA,QAAQ,EAAE,KAAKE,YAAzF;AAAuG,MAAA,KAAK,EAAC,kBAA7G;AAAgI,MAAA,QAAQ,MAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EASA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATA,CAHA,CADJ;AAgBH;;AA7DgC;;AAgErC,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,WAAW,EAAEsB,eAAe,IAAID,QAAQ,CAACrB,WAAW,CAACsB,eAAD,CAAZ;AADJ,CAAL,CAAnC;;AAIA,eAAezB,OAAO,CAAE,IAAF,EAAOuB,kBAAP,CAAP,CAAkCnB,MAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {signUpStart} from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\n\nclass SignUp extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            displayName: '',\n            email:'',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const {signUpStart} = this.props;\n        const {displayName, email, password, confirmPassword} =this.state;\n\n        if(password !== confirmPassword) {\n            alert(`Passwords don't match`);\n            return;\n        }\n        signUpStart({displayName,email,password});\n\n        // try {\n            // const {user} =await auth.createUserWithEmailAndPassword(email, password);\n            // createUserProfileDocument(user, {displayName});\n            // this.setState({\n            //     displayName: '',\n            //     email:'',\n            //     password: '',\n            //     confirmPassword: ''\n            // })\n\n        // } catch(error) {\n            // console.error(error);\n        // }\n\n    };\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        this.setState({[name]: value});\n    }\n\n    render() {\n        const {displayName, email, password, confirmPassword} =this.state;\n        return(\n            <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n            <FormInput type='text' name='displayName' value={displayName} onChange={this.handleChange} label='Display Name' required>\n            </FormInput>\n            <FormInput type='email' name='email' value={email} onChange={this.handleChange} label='Email' required>\n            </FormInput>\n            <FormInput type='password' name='password' value={password} onChange={this.handleChange} label='Password' required>\n            </FormInput>\n            <FormInput type='password' name='confirmPassword' value={confirmPassword} onChange={this.handleChange} label='Confirm Password' required>\n            </FormInput>\n            <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form></div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect (null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}