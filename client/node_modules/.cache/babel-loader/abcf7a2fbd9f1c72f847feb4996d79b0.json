{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"./../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am tired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //   collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //       dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n\n  const snapshot = yield collectionRef.get();\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/pr293504/Desktop/intoReact/react-ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,iCAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAG;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAiCQ,QAAjC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACC,GALD,CAKC,OAAMC,KAAN,EAAa;AAChB,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACG,GATsC,CAUzC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMJ,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACC;AAED,OAAO,UAAUI,qBAAV,GAAkC;AACvC,QAAMlB,SAAS,CACbG,eAAe,CAACgB,uBADH,EAEbX,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"./../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am tired\");\n  try{\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot);\n  yield put(fetchCollectionsSuccess(collectionsMap))\n  }catch(error) {\nyield put(fetchCollectionsFailure(error.message))\n  }\n//   collectionRef\n//     .get()\n//     .then(snapshot => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionsSuccess(collectionsMap));\n//     })\n//     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\nconst snapshot = yield collectionRef.get();\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}