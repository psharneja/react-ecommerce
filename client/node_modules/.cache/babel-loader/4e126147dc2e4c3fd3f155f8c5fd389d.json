{"ast":null,"code":"import _defineProperty from \"/Users/pr293504/Desktop/intoReact/react-ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/pr293504/Desktop/intoReact/react-ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pr293504/Desktop/intoReact/react-ecommerce/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    }); // try {\n    // const {user} =await auth.createUserWithEmailAndPassword(email, password);\n    // createUserProfileDocument(user, {displayName});\n    // this.setState({\n    //     displayName: '',\n    //     email:'',\n    //     password: '',\n    //     confirmPassword: ''\n    // })\n    // } catch(error) {\n    // console.error(error);\n    // }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/pr293504/Desktop/intoReact/react-ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {connect} from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {signUpStart} from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email:'',\n        password: '',\n        confirmPassword: ''\n    })\n    \n    const {displayName, email, password, confirmPassword} = userCredentials;\n    \n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if(password !== confirmPassword) {\n            alert(`Passwords don't match`);\n            return;\n        }\n        signUpStart({displayName,email,password});\n\n        // try {\n            // const {user} =await auth.createUserWithEmailAndPassword(email, password);\n            // createUserProfileDocument(user, {displayName});\n            // this.setState({\n            //     displayName: '',\n            //     email:'',\n            //     password: '',\n            //     confirmPassword: ''\n            // })\n\n        // } catch(error) {\n            // console.error(error);\n        // }\n\n    };\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n        setUserCredentials({...userCredentials, [name]: value});\n    }\n\n        return(\n            <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n            <FormInput type='text' name='displayName' value={displayName} onChange={handleChange} label='Display Name' required>\n            </FormInput>\n            <FormInput type='email' name='email' value={email} onChange={handleChange} label='Email' required>\n            </FormInput>\n            <FormInput type='password' name='password' value={password} onChange={handleChange} label='Password' required>\n            </FormInput>\n            <FormInput type='password' name='confirmPassword' value={confirmPassword} onChange={handleChange} label='Confirm Password' required>\n            </FormInput>\n            <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form></div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect (null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}